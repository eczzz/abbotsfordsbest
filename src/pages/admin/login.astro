---
import Layout from '../../layouts/Layout.astro';
import { getSupabase } from '../../lib/supabaseClient.js';

// Check if user is already logged in and redirect if they are an admin
const supabase = getSupabase(Astro);
const { data: { session } } = await supabase.auth.getSession();

if (session) {
  // Check user role
  const { data: profile } = await supabase
    .from('profiles')
    .select('role')
    .eq('id', session.user.id)
    .single();
  
  if (profile?.role === 'admin') {
    return Astro.redirect('/admin/submissions');
  }
}
---

<Layout title="Admin Login - Abbotsford's Best" description="Admin login for Abbotsford's Best">
  <!-- Login Page -->
  <section class="min-h-screen bg-gray-900 flex items-center justify-center py-12 px-4 sm:px-6 lg:px-8">
    <div class="max-w-md w-full space-y-8">
      <div>
        <div class="mx-auto h-12 w-auto flex justify-center">
          <div class="text-3xl font-bold tracking-tight text-white">
            #AB<span class="bg-white text-gray-900 px-1 rounded">BEST</span>
          </div>
        </div>
        <h2 class="mt-6 text-center text-3xl font-extrabold text-white">
          Admin Login
        </h2>
        <p class="mt-2 text-center text-sm text-gray-400">
          Sign in to access the admin panel
        </p>
      </div>

      <!-- Login Form -->
      <form id="login-form" class="mt-8 space-y-6">
        <!-- Status Messages -->
        <div id="login-message" class="hidden">
          <div id="login-error-message" class="hidden bg-red-50 border border-red-200 rounded-xl p-4">
            <div class="flex">
              <svg class="w-5 h-5 text-red-400" fill="currentColor" viewBox="0 0 20 20">
                <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z" clip-rule="evenodd"></path>
              </svg>
              <div class="ml-3">
                <h3 class="text-sm font-medium text-red-800">Login Failed</h3>
                <p id="login-error-text" class="text-sm text-red-700 mt-1">Invalid email or password.</p>
              </div>
            </div>
          </div>
        </div>

        <div class="space-y-4">
          <!-- Email -->
          <div>
            <label for="email" class="block text-sm font-medium text-gray-300 mb-2">
              Email Address
            </label>
            <input 
              id="email" 
              name="email" 
              type="email" 
              autocomplete="email" 
              required 
              class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-primary-500 placeholder-gray-400"
              placeholder="admin@example.com"
            />
          </div>

          <!-- Password -->
          <div>
            <label for="password" class="block text-sm font-medium text-gray-300 mb-2">
              Password
            </label>
            <input 
              id="password" 
              name="password" 
              type="password" 
              autocomplete="current-password" 
              required 
              class="w-full px-4 py-3 border border-gray-600 bg-gray-800 text-white rounded-xl focus:ring-2 focus:ring-primary-500 focus:border-primary-500 placeholder-gray-400"
              placeholder="Enter your password"
            />
          </div>
        </div>

        <!-- Submit Button -->
        <div>
          <button 
            type="submit" 
            id="login-btn"
            class="group relative w-full flex justify-center py-3 px-4 border border-transparent text-sm font-medium rounded-xl text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 disabled:opacity-50 disabled:cursor-not-allowed"
          >
            <span id="login-btn-text">Sign In</span>
            <svg id="login-loading-spinner" class="hidden animate-spin -mr-1 ml-3 h-5 w-5 text-white" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
              <circle class="opacity-25" cx="12" cy="12" r="10" stroke="currentColor" stroke-width="4"></circle>
              <path class="opacity-75" fill="currentColor" d="M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z"></path>
            </svg>
          </button>
        </div>

        <!-- Back to Home -->
        <div class="text-center">
          <a href="/" class="text-sm text-primary-400 hover:text-primary-300">
            ‚Üê Back to Home
          </a>
        </div>
      </form>
    </div>
  </section>
</Layout>

<script>
import { supabase } from '../../lib/supabaseClient.js';

document.addEventListener('DOMContentLoaded', function() {
  const form = document.getElementById('login-form');
  const loginBtn = document.getElementById('login-btn');
  const loginBtnText = document.getElementById('login-btn-text');
  const loginLoadingSpinner = document.getElementById('login-loading-spinner');
  const loginMessage = document.getElementById('login-message');
  const loginErrorMessage = document.getElementById('login-error-message');
  const loginErrorText = document.getElementById('login-error-text');

  function showLoading() {
    loginBtn.disabled = true;
    loginBtnText.textContent = 'Signing In...';
    loginLoadingSpinner.classList.remove('hidden');
    loginMessage.classList.add('hidden');
    loginErrorMessage.classList.add('hidden');
  }

  function hideLoading() {
    loginBtn.disabled = false;
    loginBtnText.textContent = 'Sign In';
    loginLoadingSpinner.classList.add('hidden');
  }

  function showError(message) {
    loginMessage.classList.remove('hidden');
    loginErrorMessage.classList.remove('hidden');
    loginErrorText.textContent = message;
  }

  form?.addEventListener('submit', async function(e) {
    e.preventDefault();
    
    const formData = new FormData(form);
    const email = formData.get('email');
    const password = formData.get('password');
    
    if (!email || !password) {
      showError('Please enter both email and password.');
      return;
    }

    showLoading();

    try {
      // Sign in with Supabase
      const { data: authData, error: authError } = await supabase.auth.signInWithPassword({
        email: email,
        password: password
      });

      if (authError) {
        hideLoading();
        if (authError.message.includes('Invalid login credentials')) {
          showError('Invalid email or password. Please try again.');
        } else {
          showError(authError.message || 'Login failed. Please try again.');
        }
        return;
      }

      try {
        if (authData?.session) {
          const response = await fetch('/api/auth/set-session', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              event: 'SIGNED_IN',
              session: authData.session
            })
          });

          if (!response.ok) {
            const errorPayload = await response.json().catch(() => ({}));
            throw new Error(errorPayload?.error || 'Failed to persist session on server.');
          }
        }
      } catch (syncError) {
        console.error('Failed to synchronize auth session with server:', syncError);
        hideLoading();
        showError('Unable to complete sign in. Please try again.');
        return;
      }

      // Success - redirect to admin panel (server-side will verify admin role)
      window.location.href = '/admin/submissions';

    } catch (error) {
      console.error('Login error:', error);
      hideLoading();
      showError('An unexpected error occurred. Please try again.');
    }
  });
});
</script>