---
export interface Props {
  submission: {
    id: string;
    name: string;
    address: string;
    phone: string;
    email: string;
    website: string;
    categories: string[];
    new_category?: string;
    description: string;
    backlink_url?: string;
    logo_url?: string;
    status: 'pending' | 'approved' | 'rejected';
    created_at: string;
    updated_at: string;
  };
}

const { submission } = Astro.props;

const formatDate = (dateString: string) => {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'short',
    day: 'numeric',
    hour: '2-digit',
    minute: '2-digit'
  });
};

const getStatusBadge = (status: string) => {
  switch (status) {
    case 'pending':
      return 'bg-yellow-100 text-yellow-800 border-yellow-200';
    case 'approved':
      return 'bg-green-100 text-green-800 border-green-200';
    case 'rejected':
      return 'bg-red-100 text-red-800 border-red-200';
    default:
      return 'bg-gray-100 text-gray-800 border-gray-200';
  }
};
---

<tr class="hover:bg-gray-50">
  <!-- Business Info -->
  <td class="px-6 py-4">
    <div class="flex items-center">
      {submission.logo_url ? (
        <img src={submission.logo_url} alt={`${submission.name} logo`} class="w-10 h-10 rounded-lg object-cover mr-3" />
      ) : (
        <div class="w-10 h-10 bg-gray-200 rounded-lg flex items-center justify-center mr-3">
          <span class="text-xs text-gray-500 font-medium">LOGO</span>
        </div>
      )}
      <div>
        <div class="text-sm font-medium text-gray-900">{submission.name}</div>
        <div class="text-sm text-gray-500 truncate max-w-xs">{submission.address}</div>
        {submission.website && (
          <a href={submission.website} target="_blank" rel="noopener noreferrer" 
             class="text-xs text-primary-600 hover:text-primary-800">
            {submission.website.replace(/^https?:\/\//, '')}
          </a>
        )}
      </div>
    </div>
  </td>

  <!-- Categories -->
  <td class="px-6 py-4">
    <div class="flex flex-wrap gap-1">
      {submission.categories.map((category) => (
        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
          {category.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}
        </span>
      ))}
      {submission.new_category && (
        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
          {submission.new_category} (New)
        </span>
      )}
    </div>
  </td>

  <!-- Status -->
  <td class="px-6 py-4">
    <span class={`inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium border ${getStatusBadge(submission.status)}`}>
      {submission.status.charAt(0).toUpperCase() + submission.status.slice(1)}
    </span>
  </td>

  <!-- Date -->
  <td class="px-6 py-4 text-sm text-gray-500">
    {formatDate(submission.created_at)}
  </td>

  <!-- Actions -->
  <td class="px-6 py-4">
    <div class="flex space-x-2">
      {submission.status === 'pending' && (
        <>
          <button 
            data-action="approve" 
            data-submission-id={submission.id}
            class="bg-green-600 text-white px-3 py-1 rounded-lg text-xs font-medium hover:bg-green-700 transition-colors duration-200"
          >
            Approve
          </button>
          <button 
            data-action="reject" 
            data-submission-id={submission.id}
            class="bg-red-600 text-white px-3 py-1 rounded-lg text-xs font-medium hover:bg-red-700 transition-colors duration-200"
          >
            Reject
          </button>
        </>
      )}
      <button 
        data-action="edit" 
        data-submission-id={submission.id}
        class="bg-blue-600 text-white px-3 py-1 rounded-lg text-xs font-medium hover:bg-blue-700 transition-colors duration-200"
      >
        Edit
      </button>
      <button 
        data-action="view" 
        data-submission-id={submission.id}
        class="bg-gray-600 text-white px-3 py-1 rounded-lg text-xs font-medium hover:bg-gray-700 transition-colors duration-200"
      >
        View
      </button>
      <button 
        data-action="delete" 
        data-submission-id={submission.id}
        class="bg-red-600 text-white px-3 py-1 rounded-lg text-xs font-medium hover:bg-red-700 transition-colors duration-200"
      >
        Delete
      </button>
    </div>
  </td>
</tr>

<!-- Expandable Details Row (Hidden by default) -->
<tr id={`details-${submission.id}`} class="hidden bg-gray-50">
  <td colspan="5" class="px-6 py-4">
    <div class="bg-white rounded-lg p-4 border border-gray-200">
      <h4 class="font-medium text-gray-900 mb-3">Business Description</h4>
      <p class="text-sm text-gray-700 mb-4">{submission.description}</p>
      
      {submission.backlink_url && (
        <div class="mb-4">
          <h5 class="font-medium text-gray-900 mb-2">Backlink URL</h5>
          <a href={submission.backlink_url} target="_blank" rel="noopener noreferrer" 
             class="text-sm text-primary-600 hover:text-primary-800">
            {submission.backlink_url}
          </a>
        </div>
      )}
      
      <div class="text-xs text-gray-500">
        <p>Submitted: {formatDate(submission.created_at)}</p>
        <p>Last Updated: {formatDate(submission.updated_at)}</p>
      </div>
    </div>
  </td>
</tr>